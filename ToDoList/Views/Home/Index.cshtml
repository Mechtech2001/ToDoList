@model IEnumerable<ToDo>
@{
    ViewData["Title"] = "To-do list";
}

<div class="row">
    <div class="col-md-2">
        <form asp-action="Filter" method="post">
            <div class="mb-3">
                <label class="form-label">Status</label>
                <select name="filter" class="form-select" asp-items="@(new SelectList(ViewBag.Statuses, "StatusId", "Name", ViewBag.Filters.StatusId))">
                    <option value="all">All</option>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Due:</label>
                <select name="filter" class="form-select" asp-items="@(new SelectList(ViewBag.DueFilters, "Key", "Value", ViewBag.Filters.Due))">
                    <option value="all">All</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary mb-3">Filter</button>
            <a asp-action="Index" asp-route-id="" class="btn btn-primary mb-3">Clear</a>
        </form>
    </div>


    <div class="col-md-10">
        <form asp-action="UpdateStatus" method="post" asp-route-id="@ViewBag.Filters.FilterString">
            <table class="table table-bordered table-striped mt-2">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Sprint</th>
                        <th>Point Value</th>
                        <th>Due Date</th>
                        <th>Status</th>
                        <th class="w-25"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (ToDo task in Model)
                    {
                        string overdue = task.Overdue ? "bg-warning" : "";
                        <tr>
                            <td>@task.Name</td>
                            <td>@task.Description</td>
                            <td>@task.SprintNumber</td>
                            <td>@task.PointValue</td>
                            <td class="@overdue">@task.DueDate?.ToShortDateString()</td>
                            <td class="@overdue">@task.Status.Name</td>
                            <td class="col-md-6">
                                @await Component.InvokeAsync("TaskStatusActions", task)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
    </div>


    <form asp-action="DeleteComplete" method="post" asp-route-id="@ViewBag.Filters.FilterString">
        <a asp-action="Add" class="btn btn-primary">Add new task</a>
        <submit-button>Delete compeleted tasks</submit-button>
    </form>
</div>
</div>